datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model DataTable {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model DataRow {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model DataColumn {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Role {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model User {
  createdAt     DateTime   @default(now())
  email         String?    @unique
  firstName     String?
  id            String     @id @default(cuid())
  lastName      String?
  password      String
  roles         Json
  updatedAt     DateTime   @updatedAt
  userDataItems UserData[]
  username      String     @unique
}

model UserData {
  createdAt DateTime            @default(now())
  data      Json?
  id        String              @id @default(cuid())
  status    EnumUserDataStatus?
  updatedAt DateTime            @updatedAt
  user      User?               @relation(fields: [userId], references: [id])
  userId    String?
}

model EditorRole {
  canApproveData Boolean?
  canDeleteData  Boolean?
  createdAt      DateTime @default(now())
  id             String   @id @default(cuid())
  updatedAt      DateTime @updatedAt
}

model UserRole {
  canEditOwnData Boolean?
  canViewOwnData Boolean?
  createdAt      DateTime @default(now())
  id             String   @id @default(cuid())
  updatedAt      DateTime @updatedAt
}

model AdminRole {
  canDoEverything Boolean?
  createdAt       DateTime @default(now())
  id              String   @id @default(cuid())
  updatedAt       DateTime @updatedAt
}

enum EnumUserDataStatus {
  Option1
}
